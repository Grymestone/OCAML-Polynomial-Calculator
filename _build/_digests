"Rule: ocaml dependencies ml (%=lexer )": "\178\030\215e=\200\254P\163\182WAS\207\135\246"
"Rule: ocaml: menhir dependencies (%=parser )": "\247\250\210h4\169\237X\175\003c\028\240\184\228b"
"Rule: ocamllex (%=lexer )": "\024\223Ers\174\153\134\022\214j\206\162\226\200l"
"Resource: /home/daniel/UF/spring2019/COP4020/project/OCAML-Polynomial-Calculator/main.ml": "\144[\138\169/\249\r\140c\203\152z\020F\235c"
"Resource: /home/daniel/UF/spring2019/COP4020/project/OCAML-Polynomial-Calculator/lexer.mll": "\250\018\209\171\232\173\012l\248\204\203\186L\149(\161"
"Resource: /home/daniel/UF/spring2019/COP4020/project/OCAML-Polynomial-Calculator/expr.ml": "\1851D\164\164_S:=\004\243\213\164\160\237\232"
"Rule: ocaml dependencies ml (%=parser )": "\183\219V}\169@\160(\198\229\163\196\006n]\140"
"Rule: ocaml: ml & cmi -> cmo (%=parser )": "p\196\218\173\022gM\251\216T\236l\182_\254\200"
"Resource: /home/daniel/UF/spring2019/COP4020/project/OCAML-Polynomial-Calculator/parser.mly": "+\153\189O\029\226l\161\016\139\\\153 |\002\021"
"Rule: ocaml: ml -> cmo & cmi (%=lexer )": "G\244x)\006\202;[\004\181\129vYuj\212"
"Rule: ocaml: cmo* -> byte (%=main )": "\014\161|\186B}\213cE\223\174\127\2310xn"
"Rule: ocaml: ml -> cmo & cmi (%=main )": "\018RO\214X\\H\206\255\238d/K-\\\172"
"Rule: ocaml dependencies ml (%=poly )": "\196\251\254\004\204\241\020<\232\014v\177\198\018_\238"
"Rule: ocaml dependencies mli (%=parser )": "\211\144y\183\234\181\146\180x\2445\1583\r\249\203"
"Rule: ocaml: ml -> cmo & cmi (%=expr )": "m8\250\007\2052\021P%\021\184\145EQx\002"
"Rule: ocaml dependencies ml (%=main )": "Y\219\154o\023'\200\127\212\170\004Q\181R\226\143"
"Rule: ocaml: ml -> cmo & cmi (%=poly )": "/gvnY\217YE\153y\188f1\131\142="
"Resource: /home/daniel/UF/spring2019/COP4020/project/OCAML-Polynomial-Calculator/poly.ml": "\251\197\021J\127\243\142\170N\022\n\244\193Bo\218"
"Rule: ocaml dependencies ml (%=expr )": "\005.=\234\003\1385@\192\137T9\165\007\136?"
"Rule: ocaml: menhir (%=parser )": "ie\149q\t\226\149m\196u\206^\197I\134\147"
"Rule: ocaml: mli -> cmi (%=parser )": "rR[\155T \019\147q@\255\011v;Dl"
